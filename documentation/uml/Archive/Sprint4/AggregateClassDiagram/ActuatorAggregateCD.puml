@startuml
'https://plantuml.com/class-diagram

package "Actuator Aggregate" {

ImplFactoryActuator "1" ..|> "1" FactoryActuator : implements >
RepoActuator "1" ..|> "1" RepoInterface : implements >
Actuator "1" -- "1" ActuatorValue : has >
Actuator "1" -- "1" ActuatorID : has >
ActuatorValue "1" ..|> "1" Value : implements >
ImplFactoryActuator "1" -- "1" Actuator : creates >
Actuator "*" -- "1" RepoActuator : uses >
ActuatorID "1" ..|> "1" DomainID : implements >
Actuator "1" ..|> "1" AggregateRoot : implements >
ActuatorValue "1" ..|> "1" ValueObject : implements >
Actuator "1" ..|> "1" "Actuator " : implements >
AggregateRoot --|> DomainEntity : extends >



interface "Actuator "{
}
interface "DomainEntity"{
}

+interface FactoryActuator{
+ createActuator(actuatorModelName, actuatorValue, actuatorID, deviceID, actuatorModelID) : Actuator
}

+class Actuator {
-actuatorValue:ActuatorValue
-actuatorID: ActuatorID
-deviceID: DeviceID
-actuatorModelID : ActuatorModelID
+ Actuator (actuatorValue, actuatorID, deviceID, actuatorModelID): Actuator
+ setValue () : ActuatorValue
+ identity() : ActuatorID
+ sameAs() : boolean
+ equals() : boolean
+ getDeviceID() : DeviceID
+ getActuatorModelID() : ActuatorModelID
+ getValue() : ActuatorValue
}

class Actuator
note left: Represents several Actuator Models

+class ImplFactoryActuator {
+ createActuator(actuatorModelName, actuatorValue, actuatorID, deviceID, actuatorModelID) : Actuator
}

+class ActuatorValue {
-value: T
+ ActuatorValue (value): ActuatorValue
- areConstructorArgumentsValid(value) : boolean
+ toString() : String
+ getValue() : Value
}

class ActuatorValue
note bottom: Represents several Actuator Values

+interface Value {
+ getValue() : Value
}


+class ActuatorID {
-actuatorID: String
+ ActuatorID (actuatorID): ActuatorID
- isActuatorValid (): boolean
+ equals() : boolean
+ toString() : String
}

+class RepoActuator{
+ DATA: Map<ActuatorID, Actuator>
+ save(actuator) : Actuator
+ update(actuator) : Actuator
+ findAll()
+ ofIdentity(id) : Actuator
+ containsOfIdentity(id) : boolean
}

+interface RepoInterface{
+ save() : T
+ findAll() : T
+ ofIdentity() : T
+ containsOfIdentity() : T
}

+interface DomainID{
}

+interface AggregateRoot{
}

+interface ValueObject{
}

}





newpage









}
@enduml