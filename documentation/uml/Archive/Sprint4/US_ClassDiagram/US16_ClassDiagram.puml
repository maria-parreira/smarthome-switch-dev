@startuml
'https://plantuml.com/class-diagram


SPV300 "1" -- "1" SPV300Value : uses >
SPV300 "1" -- "1" DeviceId : contains >
SPV300 "1" -- "1" ActuatorModelID : contains >
SPV300 "1" -- "1" ActuatorID : contains >
ActuatorID "1" ..|> "1" DomainID : implements >
SPV300 "1" ..|> "1" "Actuator " : implements >
SPV300 "1" ..|> "1" AggregateRoot : implements >
SPV300Value "1" ..|> "1" ValueObject : implements >
SPV300Value "1" ..|> "1" Value : implements >


interface "Actuator "{
}

+class SPV300 {
-actuatorValue:SPV300Value
-actuatorID: ActuatorID
-deviceID: DeviceID
-actuatorModelID : ActuatorModelID
+ SPV300 (actuatorValue: SPV300Value, actuatorID: ActuatorID, deviceID: DeviceID, actuatorModelID: ActuatorModelID): SPV300
+ identity() : ActuatorID
+ sameAs(object: Object): boolean
+ equals(object: Object): boolean
+ setValue(value: Value) : ActuatorValue
}


+class SPV300Value {
- nValue: double
- minValue : double
- maxValue : double
- precision : int
+ SPV300Value (nValue: double): SPV300Value
- areConstructorArgumentsValid(nValue: double) : boolean
+ equals(object: Object)
+ toString(object: Object) : String
}


+interface Value {
+ getValue() : Value
}

+class ActuatorID {
- actuatorID: String
+ ActuatorID (actuatorID: actuatorID): ActuatorID
- isActuatorValid (): boolean
+ equals(object: Object) : boolean
+ toString() : String
}

class DeviceId{
- _id: String
+ DeviceId(id: String): DeviceId
+ equals (object: Object): boolean
+ hashCode(): int
+ toString(): String
}

class ActuatorModelID{
- _id: String
+ ActuatorModelID(id: String): ActuatorModelID
+ equals (object: Object): boolean
+ toString(): String
}

+interface DomainID{
}

+interface AggregateRoot{
}

+interface ValueObject{
}



@enduml