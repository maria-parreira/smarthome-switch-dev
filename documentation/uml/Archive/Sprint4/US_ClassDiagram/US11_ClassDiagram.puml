@startuml
'https://plantuml.com/class-diagram



TSY01 "1" -- "1" TSY01Value : uses >
TSY01 "1" -- "1" SensorID : contains >
TSY01 "1" -- "1" SensorModelId : contains >
TSY01 "1" -- "1" DeviceId : contains >
SensorID "1" ..|> "1" DomainID : implements >
TSY01Value "1" ..|> "1" Value : implements >
TSY01 "1" ..|> "1" AggregateRoot : implements >
TSY01Value "1" ..|> "1" ValueObject : implements >
TSY01 "1" ..|> "1" "Sensor_Value" : implements >
"Sensor_Value" --|> "Sensor"


interface "Sensor_Value"{
}

interface "Sensor"{
}

+class TSY01 {
-SensorValue:TSY01Value
-SensorID: SensorID
-deviceID: DeviceID
-SensorModelID : SensorModelID
+ TSY01 (sensorValue: SensorValue, sensorID: SensorID, deviceID: DeviceID, sensorModelID: SensorModelID): TSY01
+ identity() : SensorID
+ sameAs(object: Object) : boolean
+ equals(object: Object) : boolean
+ getValue() : Value
+ setValue(readingID: int) : SY01Value
+ setData() : Map <Integer, Integer>
}

+class TSY01Value {
- nValue: int
- minValue : int
- maxValue : int
+ TSY01Value (nValue: int): TSY01Value
- areConstructorArgumentsValid(value: Value) : boolean
+ toString() : String
}


+interface Value {
+ getValue() : Value
}


+class SensorID {
- sensorID: String
+ SensorID (sensorID): SensorID
- isSensorValid (): boolean
+ equals(object: Object) : boolean
+ toString(object: Object) : String
}


class DeviceId{
- id: String
+ DeviceId(String id): DeviceId
+ equals (object: Object): boolean
+ hashCode(): int
+ toString(): String
}


class SensorModelId{
- id: String
+ SensorModelId(id: String): SensorModelId
+ equals (object: Object): boolean
+ toString(): String
}

+interface DomainID{
}

+interface AggregateRoot{
}

+interface ValueObject{
}









@enduml