@startuml
Sensor_Value --|> Sensor : extends >
DomainId --|> ValueObject : extends >
GA100K ..|> Sensor_Value : implements >
GA100K ..|> AggregateRoot : implements >
GA100KValue ..|> ValueObject : implements >
GA100KValue ..|> Value : implements >
DeviceId ..|> DomainId : implements >
SensorId ..|> DomainId : implements >
SensorModelId ..|> DomainId : implements >
GA100K -- GA100KValue : uses >
GA100K -- DeviceId : contains >
GA100K -- SensorId : contains >
GA100K -- SensorModelId : contains >
AggregateRoot --|> DomainEntity : extends >

interface DomainEntity{
}

interface ValueObject{
}

interface DomainId {
}

interface Sensor{
}

interface Sensor_Value{
+ getValue()
}

interface AggregateRoot{
}

interface Value{
}

class GA100K{
- _sensorValue: GA100KValue
- _sensorID: SensorId
- _deviceID: DeviceId
- _sensorModelID: SensorModelId
- _sensorData: Map <Integer, Integer>

# GA100K(device id: Device id, sensorModelID  SensorModelID, sensorID:SensorId): GA100K
- areConstructorArgumentsValid(sensorID: SensorID, deviceID: DeviceID, sensorModelID: SensorModelID):: boolean
+ identity(): SensorId
+ sameAs (object): boolean
+ equals (object): boolean
- setData(): Map <Integer, Integer>
+ setValue(Integer readingNumber): void
+ getValue(): Value
}


class GA100KValue {

- _temperatureValue: Integer
# GA100KValue ( value): GA100KValue
+ areConstructorArgumentsValid(Integer temperatureValue): boolean
+ toString(): String
}

class DeviceId{
- _id: String
# DeviceId(String id): DeviceId
+ equals (object : Object): boolean
+ hashCode(): int
+ toString(): String
}

class SensorModelId{
- _id: String
# SensorModelId(String id): SensorModelId
+ equals (object : Object): boolean
+ toString(): String
}

class SensorId{
- _id: String
# SensorId(String id): SensorId
+ equals (object : Object): boolean
+ equals (object : Object): boolean
+ toString(): String
}


@enduml